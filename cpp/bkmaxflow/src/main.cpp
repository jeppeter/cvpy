#include <stdio.h>
#include <maxflow/graph.h>

void PrintErrorMsg(const char* errmsg)
{
	fprintf(stderr,errmsg);
	return;
}

int main(int argc,char* argv[])
{
	typedef maxflowLib::Graph<int,int,int> GraphType;
	GraphType *g = new GraphType(/*estimated # of nodes*/ 1, /*estimated # of edges*/ 5,PrintErrorMsg); 

	g -> add_node(100);

	g -> add_edge(34,63,90,0);
	g -> add_edge(34,3,90,0);
	g -> add_edge(34,69,28,0);
	g -> add_edge(34,4,44,0);
	g -> add_edge(34,87,6,0);
	g -> add_edge(2,57,43,0);
	g -> add_edge(2,16,58,0);
	g -> add_edge(72,47,38,0);
	g -> add_edge(72,35,40,0);
	g -> add_edge(24,68,11,0);
	g -> add_edge(24,38,74,0);
	g -> add_edge(24,12,10,0);
	g -> add_edge(22,4,30,0);
	g -> add_edge(22,79,57,0);
	g -> add_edge(22,45,85,0);
	g -> add_edge(6,47,65,0);
	g -> add_edge(6,24,60,0);
	g -> add_edge(6,85,26,0);
	g -> add_edge(6,84,54,0);
	g -> add_edge(67,66,81,0);
	g -> add_edge(67,89,19,0);
	g -> add_edge(67,52,53,0);
	g -> add_edge(67,58,66,0);
	g -> add_edge(67,59,74,0);
	g -> add_edge(83,86,83,0);
	g -> add_edge(83,63,44,0);
	g -> add_edge(83,94,58,0);
	g -> add_edge(25,82,28,0);
	g -> add_edge(25,44,68,0);
	g -> add_edge(42,14,98,0);
	g -> add_edge(42,73,7,0);
	g -> add_edge(9,54,16,0);
	g -> add_edge(9,94,46,0);
	g -> add_edge(9,96,66,0);
	g -> add_edge(13,14,23,0);
	g -> add_edge(13,64,28,0);
	g -> add_edge(65,7,13,0);
	g -> add_edge(65,40,98,0);
	g -> add_edge(75,65,96,0);
	g -> add_edge(75,22,71,0);
	g -> add_edge(75,89,65,0);
	g -> add_edge(90,63,81,0);
	g -> add_edge(90,85,78,0);
	g -> add_edge(40,28,92,0);
	g -> add_edge(40,32,26,0);
	g -> add_edge(40,80,68,0);
	g -> add_edge(88,37,4,0);
	g -> add_edge(88,32,92,0);
	g -> add_edge(88,30,87,0);
	g -> add_edge(88,46,51,0);
	g -> add_edge(88,83,37,0);
	g -> add_edge(98,13,73,0);
	g -> add_edge(98,35,24,0);
	g -> add_edge(98,82,92,0);
	g -> add_edge(98,1,11,0);
	g -> add_edge(95,28,23,0);
	g -> add_edge(95,13,86,0);
	g -> add_edge(95,44,96,0);
	g -> add_edge(85,59,54,0);
	g -> add_edge(85,72,6,0);
	g -> add_edge(85,26,55,0);
	g -> add_edge(85,45,88,0);
	g -> add_edge(85,28,3,0);
	g -> add_edge(74,59,83,0);
	g -> add_edge(74,16,86,0);
	g -> add_edge(49,1,27,0);
	g -> add_edge(49,91,70,0);
	g -> add_edge(49,30,65,0);
	g -> add_edge(64,17,56,0);
	g -> add_edge(64,46,66,0);
	g -> add_edge(64,51,97,0);
	g -> add_edge(64,80,91,0);
	g -> add_edge(64,81,51,0);
	g -> add_edge(8,73,70,0);
	g -> add_edge(8,70,69,0);
	g -> add_edge(8,6,73,0);
	g -> add_edge(8,54,47,0);
	g -> add_edge(47,68,33,0);
	g -> add_edge(47,10,33,0);
	g -> add_edge(3,30,40,0);
	g -> add_edge(3,50,75,0);
	g -> add_edge(3,60,40,0);
	g -> add_edge(17,55,96,0);
	g -> add_edge(17,47,40,0);
	g -> add_edge(52,3,8,0);
	g -> add_edge(52,64,74,0);
	g -> add_edge(43,44,60,0);
	g -> add_edge(43,4,57,0);
	g -> add_edge(10,15,5,0);
	g -> add_edge(10,85,38,0);
	g -> add_edge(10,63,17,0);
	g -> add_edge(31,34,3,0);
	g -> add_edge(55,71,52,0);
	g -> add_edge(55,85,99,0);
	g -> add_edge(55,26,40,0);
	g -> add_edge(55,37,29,0);
	g -> add_edge(55,88,43,0);
	g -> add_edge(55,66,89,0);
	g -> add_edge(55,9,75,0);
	g -> add_edge(60,17,81,0);
	g -> add_edge(60,66,23,0);
	g -> add_edge(60,24,43,0);
	g -> add_edge(45,41,59,0);
	g -> add_edge(45,53,78,0);
	g -> add_edge(45,19,16,0);
	g -> add_edge(45,7,9,0);
	g -> add_edge(20,53,36,0);
	g -> add_edge(20,65,9,0);
	g -> add_edge(20,59,5,0);
	g -> add_edge(20,96,90,0);
	g -> add_edge(20,19,6,0);
	g -> add_edge(82,89,21,0);
	g -> add_edge(82,28,9,0);
	g -> add_edge(82,46,95,0);
	g -> add_edge(58,3,39,0);
	g -> add_edge(58,66,6,0);
	g -> add_edge(66,83,90,0);
	g -> add_edge(66,61,16,0);
	g -> add_edge(21,13,49,0);
	g -> add_edge(21,39,93,0);
	g -> add_edge(7,84,2,0);
	g -> add_edge(38,64,70,0);
	g -> add_edge(51,58,50,0);
	g -> add_edge(51,41,93,0);
	g -> add_edge(51,17,12,0);
	g -> add_edge(48,9,21,0);
	g -> add_edge(78,44,50,0);
	g -> add_edge(78,62,60,0);
	g -> add_edge(78,33,49,0);
	g -> add_edge(78,15,11,0);
	g -> add_edge(78,90,15,0);
	g -> add_edge(78,60,43,0);
	g -> add_edge(71,41,61,0);
	g -> add_edge(71,28,84,0);
	g -> add_edge(76,35,61,0);
	g -> add_edge(76,9,21,0);
	g -> add_edge(76,77,60,0);
	g -> add_edge(44,94,67,0);
	g -> add_edge(44,74,98,0);
	g -> add_edge(44,6,74,0);
	g -> add_edge(44,15,77,0);
	g -> add_edge(44,96,7,0);
	g -> add_edge(44,58,1,0);
	g -> add_edge(68,87,85,0);
	g -> add_edge(68,11,93,0);
	g -> add_edge(5,19,2,0);
	g -> add_edge(37,3,7,0);
	g -> add_edge(37,53,30,0);
	g -> add_edge(37,17,99,0);
	g -> add_edge(37,1,59,0);
	g -> add_edge(14,41,79,0);
	g -> add_edge(14,70,34,0);
	g -> add_edge(36,13,4,0);
	g -> add_edge(36,51,53,0);
	g -> add_edge(36,94,75,0);
	g -> add_edge(62,6,75,0);
	g -> add_edge(62,10,36,0);
	g -> add_edge(69,1,26,0);
	g -> add_edge(69,97,32,0);
	g -> add_edge(87,8,58,0);
	g -> add_edge(87,7,96,0);
	g -> add_edge(87,28,15,0);
	g -> add_edge(87,80,37,0);
	g -> add_edge(94,89,2,0);
	g -> add_edge(94,12,92,0);
	g -> add_edge(94,26,22,0);
	g -> add_edge(94,20,66,0);
	g -> add_edge(94,46,20,0);
	g -> add_edge(80,13,21,0);
	g -> add_edge(80,63,6,0);
	g -> add_edge(80,48,13,0);
	g -> add_edge(80,25,62,0);
	g -> add_edge(80,28,54,0);
	g -> add_edge(80,9,3,0);
	g -> add_edge(50,96,77,0);
	g -> add_edge(50,65,16,0);
	g -> add_edge(41,18,25,0);
	g -> add_edge(41,44,91,0);
	g -> add_edge(41,75,18,0);
	g -> add_edge(41,33,81,0);
	g -> add_edge(91,20,77,0);
	g -> add_edge(91,88,43,0);
	g -> add_edge(91,2,41,0);
	g -> add_edge(4,23,47,0);
	g -> add_edge(4,25,17,0);
	g -> add_edge(86,17,44,0);
	g -> add_edge(86,61,71,0);
	g -> add_edge(86,95,12,0);
	g -> add_edge(86,44,64,0);
	g -> add_edge(86,60,48,0);
	g -> add_edge(86,70,70,0);
	g -> add_edge(86,92,9,0);
	g -> add_edge(39,50,78,0);
	g -> add_edge(39,90,75,0);
	g -> add_edge(39,83,69,0);
	g -> add_edge(39,23,22,0);
	g -> add_edge(39,17,79,0);
	g -> add_edge(11,85,76,0);
	g -> add_edge(1,33,65,0);
	g -> add_edge(1,86,43,0);
	g -> add_edge(1,52,79,0);
	g -> add_edge(1,83,78,0);
	g -> add_edge(81,60,5,0);
	g -> add_edge(81,42,78,0);
	g -> add_edge(81,52,79,0);
	g -> add_edge(19,24,3,0);
	g -> add_edge(19,21,23,0);
	g -> add_edge(19,58,30,0);
	g -> add_edge(97,29,73,0);
	g -> add_edge(97,6,60,0);
	g -> add_edge(97,48,81,0);
	g -> add_edge(16,31,49,0);
	g -> add_edge(16,24,44,0);
	g -> add_edge(16,34,97,0);
	g -> add_edge(79,32,11,0);
	g -> add_edge(79,72,88,0);
	g -> add_edge(79,19,46,0);
	g -> add_edge(30,91,72,0);
	g -> add_edge(30,47,12,0);
	g -> add_edge(30,7,8,0);
	g -> add_edge(26,72,92,0);
	g -> add_edge(26,88,93,0);
	g -> add_edge(26,96,29,0);
	g -> add_edge(26,93,31,0);
	g -> add_edge(26,24,37,0);
	g -> add_edge(26,36,85,0);
	g -> add_edge(27,33,33,0);
	g -> add_edge(27,10,49,0);
	g -> add_edge(61,52,30,0);
	g -> add_edge(61,31,43,0);
	g -> add_edge(12,86,22,0);
	g -> add_edge(12,20,51,0);
	g -> add_edge(33,43,96,0);
	g -> add_edge(33,40,4,0);
	g -> add_edge(54,53,97,0);
	g -> add_edge(54,45,51,0);
	g -> add_edge(54,31,28,0);
	g -> add_edge(15,14,63,0);
	g -> add_edge(32,97,53,0);
	g -> add_edge(32,34,11,0);
	g -> add_edge(32,2,61,0);
	g -> add_edge(59,21,52,0);
	g -> add_edge(59,81,15,0);
	g -> add_edge(59,25,18,0);
	g -> add_edge(28,52,55,0);
	g -> add_edge(28,49,22,0);
	g -> add_edge(28,69,12,0);
	g -> add_edge(28,57,4,0);
	g -> add_edge(28,13,10,0);
	g -> add_edge(28,31,44,0);
	g -> add_edge(18,7,66,0);
	g -> add_edge(18,30,72,0);
	g -> add_edge(18,22,41,0);
	g -> add_edge(89,46,67,0);
	g -> add_edge(89,38,85,0);
	g -> add_edge(89,70,6,0);
	g -> add_edge(77,80,85,0);
	g -> add_edge(77,3,42,0);
	g -> add_edge(77,64,88,0);
	g -> add_edge(73,61,68,0);
	g -> add_edge(73,92,13,0);
	g -> add_edge(92,15,29,0);
	g -> add_edge(92,31,76,0);
	g -> add_edge(92,77,99,0);
	g -> add_edge(92,94,9,0);
	g -> add_edge(92,45,23,0);
	g -> add_edge(92,22,39,0);
	g -> add_edge(29,36,61,0);
	g -> add_edge(29,71,90,0);
	g -> add_edge(29,22,56,0);
	g -> add_edge(96,56,50,0);
	g -> add_edge(96,68,70,0);
	g -> add_edge(57,91,57,0);
	g -> add_edge(57,27,12,0);
	g -> add_edge(57,31,10,0);
	g -> add_edge(46,59,73,0);
	g -> add_edge(46,10,73,0);
	g -> add_edge(46,24,18,0);
	g -> add_edge(46,73,96,0);
	g -> add_edge(46,38,66,0);
	g -> add_edge(46,96,6,0);
	g -> add_edge(46,84,21,0);
	g -> add_edge(70,24,89,0);
	g -> add_edge(70,81,95,0);
	g -> add_edge(70,75,35,0);
	g -> add_edge(70,73,61,0);
	g -> add_edge(70,38,67,0);
	g -> add_edge(70,71,17,0);
	g -> add_edge(93,74,79,0);
	g -> add_edge(93,21,11,0);
	g -> add_edge(84,40,19,0);
	g -> add_tweights(97,0,44);
	g -> add_tweights(36,0,4);
	g -> add_tweights(7,89,0);
	g -> add_tweights(92,0,74);
	g -> add_tweights(29,0,18);
	g -> add_tweights(85,82,0);
	g -> add_tweights(28,0,48);
	g -> add_tweights(61,90,0);
	g -> add_tweights(31,34,0);



	int flow = g -> maxflow();

	printf("Flow = %d\n", flow);
	printf("Minimum cut:\n");
	if (g->what_segment(0) == GraphType::SOURCE)
		printf("node0 is in the SOURCE set\n");
	else
		printf("node0 is in the SINK set\n");
	if (g->what_segment(1) == GraphType::SOURCE)
		printf("node1 is in the SOURCE set\n");
	else
		printf("node1 is in the SINK set\n");

	delete g;

	return 0;
}